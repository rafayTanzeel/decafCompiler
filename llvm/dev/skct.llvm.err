; ModuleID = 'foo'

@globalstring = private unnamed_addr constant [4 x i8] c"foo\00"

declare void @print_int(i32)

declare void @print_string(i8*)

define i1 @foo() {
entry:
  call void @print_string(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @globalstring, i32 0, i32 0))
  ret i1 false
}

define i32 @main() {
entry:
  %flag = alloca i1
  br i1 true, label %end, label %ifright

end:                                              ; preds = %end1, %entry
  %phival3 = phi i1 [ true, %entry ], [ %phival, %end1 ]
  store i1 %phival3, i1* %flag
  %flag4 = load i1, i1* %flag
  %zexttmp = zext i1 %flag4 to i32
  call void @print_int(i32 %zexttmp)
  ret i32 0

ifright:                                          ; preds = %entry
  %calltmp = call i1 @foo()
  br i1 %calltmp, label %ifright2, label %end1

end1:                                             ; preds = %ifright2, %ifright
  %phival = phi i1 [ %calltmp, %ifright ], [ false, %ifright2 ]
  br label %end

ifright2:                                         ; preds = %ifright
  br label %end1
}
