; ModuleID = 'GreatestCommonDivisor'

@a = internal global i32 10
@b = internal global i32 20

declare void @print_int(i32)

declare i32 @read_int()

define i32 @gcd(i32 %a, i32 %b) {
entry:
  %a1 = alloca i32
  store i32 %a, i32* %a1
  %b2 = alloca i32
  store i32 %b, i32* %b2
  br label %ifstart

ifstart:                                          ; preds = %entry
  %b3 = load i32, i32* %b2
  %ICmpEQtmp = icmp eq i32 %b3, 0
  br i1 %ICmpEQtmp, label %iftrue, label %iffalse

end:                                              ; preds = %iffalse, %iftrue
  ret i32 0

iftrue:                                           ; preds = %ifstart
  %a4 = load i32, i32* %a1
  ret i32 %a4
  br label %end

iffalse:                                          ; preds = %ifstart
  %b5 = load i32, i32* %b2
  %a6 = load i32, i32* %a1
  %b7 = load i32, i32* %b2
  %sremtmp = srem i32 %a6, %b7
  %calltmp = call i32 @gcd(i32 %b5, i32 %sremtmp)
  ret i32 %calltmp
  br label %end
}

define i32 @main() {
entry:
  %calltmp = call i32 @read_int()
  %calltmp1 = call i32 @read_int()
  %calltmp2 = call i32 @gcd(i32 %calltmp, i32 %calltmp1)
  call void @print_int(i32 %calltmp2)
  ret i32 0
}
