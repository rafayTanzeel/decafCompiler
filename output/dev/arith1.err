output prefix: llvm/dev/arith1
llvmas: /usr/lib/llvm-3.8/bin/llvm-as
llc: /usr/lib/llvm-3.8/bin/llc
cc: gcc
codegen: /home/rafay/Desktop/decafCompiler/answer/decafcomp
stdlib: /home/rafay/Desktop/decafCompiler/answer/decaf-stdlib.c
generating llvm code:/home/rafay/Desktop/decafCompiler/answer/decafcomp ... ok
; ModuleID = 'foo'

declare void @print_int(i32)

define i32 @main() {
entry:
  %flag = alloca i1
  %a = alloca i1
  %b = alloca i1
  %c = alloca i1
  %size = alloca i32
  store i1 true, i1* %a
  store i1 false, i1* %b
  store i1 true, i1* %c
  %a1 = load i1, i1* %a
  br i1 %a1, label %end, label %ifright

end:                                              ; preds = %ifright, %entry
  %phival7 = phi i1 [ %a1, %entry ], [ %phival, %ifright ]
  store i1 %phival7, i1* %flag
  store i32 0, i32* %size
  %size8 = load i32, i32* %size
  call void @print_int(i32 %size8)
  ret i32 0

ifright:                                          ; preds = %entry
  %b4 = load i1, i1* %b
  br i1 %b4, label %ifright3, label %end2
  br label %end

end2:                                             ; preds = %ifright3, %ifright
  %phival = phi i1 [ %b4, %ifright ], [ %nottmp, %ifright3 ]

ifright3:                                         ; preds = %ifright
  %c5 = load i1, i1* %c
  %c6 = load i1, i1* %c
  %nottmp = xor i1 %c6, true
  br label %end2
}
assembling to bitcode:/usr/lib/llvm-3.8/bin/llvm-as "llvm/dev/arith1.llvm" -o "llvm/dev/arith1.llvm.bc" ... failed (1)
/usr/lib/llvm-3.8/bin/llvm-as: llvm/dev/arith1.llvm:34:1: error: expected instruction opcode
ifright3:                                         ; preds = %ifright
^
converting to native code:/usr/lib/llvm-3.8/bin/llc "llvm/dev/arith1.llvm.bc" -o "llvm/dev/arith1.llvm.s" ... ok
linking:gcc -o "llvm/dev/arith1.llvm.exec" "llvm/dev/arith1.llvm.s" "/home/rafay/Desktop/decafCompiler/answer/decaf-stdlib.c" ... ok
running:llvm/dev/arith1.llvm.exec ... ok
