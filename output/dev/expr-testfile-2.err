output prefix: llvm/dev/expr-testfile-2
llvmas: /usr/lib/llvm-3.8/bin/llvm-as
llc: /usr/lib/llvm-3.8/bin/llc
cc: gcc
codegen: /home/rafay/Desktop/decafCompiler/answer/decafcomp
stdlib: /home/rafay/Desktop/decafCompiler/answer/decaf-stdlib.c
generating llvm code:/home/rafay/Desktop/decafCompiler/answer/decafcomp ... ok
; ModuleID = 'Test'

declare void @print_int(i32)

define i32 @main() {
entry:
  %x = alloca i32
  %y = alloca i1
  %z = alloca i1
  store i32 958, i32* %x
  %x1 = load i32, i32* %x
  %negtmp = sub i32 0, %x1
  store i32 %negtmp, i32* %x
  store i1 true, i1* %y
  store i1 false, i1* %z
  br i1 true, label %ifright, label %end

end:                                              ; preds = %ifright, %entry
  %phival = phi i1 [ true, %entry ], [ %y2, %ifright ]
  br i1 %phival, label %end3, label %ifright4

ifright:                                          ; preds = %entry
  %y2 = load i1, i1* %y
  br label %end

end3:                                             ; preds = %ifright4, %end
  %phival6 = phi i1 [ %phival, %entry ], [ %z5, %ifright4 ]
  store i1 %phival6, i1* %y
  %x7 = load i32, i32* %x
  %negtmp8 = sub i32 0, %x7
  call void @print_int(i32 %negtmp8)
  ret i32 0

ifright4:                                         ; preds = %end
  %z5 = load i1, i1* %z
  br label %end3
}
assembling to bitcode:/usr/lib/llvm-3.8/bin/llvm-as "llvm/dev/expr-testfile-2.llvm" -o "llvm/dev/expr-testfile-2.llvm.bc" ... failed (1)
/usr/lib/llvm-3.8/bin/llvm-as: assembly parsed, but does not verify as correct!
PHI node entries do not match predecessors!
  %phival6 = phi i1 [ %phival, %entry ], [ %z5, %ifright4 ]
label %entry
label %end
Instruction does not dominate all uses!
  %phival = phi i1 [ true, %entry ], [ %y2, %ifright ]
  %phival6 = phi i1 [ %phival, %entry ], [ %z5, %ifright4 ]
converting to native code:/usr/lib/llvm-3.8/bin/llc "llvm/dev/expr-testfile-2.llvm.bc" -o "llvm/dev/expr-testfile-2.llvm.s" ... ok
linking:gcc -o "llvm/dev/expr-testfile-2.llvm.exec" "llvm/dev/expr-testfile-2.llvm.s" "/home/rafay/Desktop/decafCompiler/answer/decaf-stdlib.c" ... ok
running:llvm/dev/expr-testfile-2.llvm.exec ... ok
